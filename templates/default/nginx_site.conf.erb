# ----------------------------
# Drupal (and Boost) Friendly configuration to use Nginx as a reverse-proxy. Generated by Chef
# ----------------------------

# http level directives:
# Define the log format for proxy activity
log_format drupal_proxy '<%= node['deploy-drupal']['nginx']['log_format'] %>';
# ----------------------------
# server block for <%= node['deploy-drupal']['project_name'] %>
server {
  listen <%= node['deploy-drupal']['nginx']['port'] %> default;
  root <%= node['deploy-drupal']['nginx']['root']  %>;
  set $boost_query "_";
  # gzip is set to <%= node['nginx']['gzip'] %> in nginx.conf
  gzip_static <%= node['nginx']['gzip']%>;
  
  # ------------------------
  ## Deny Access Rules:
  location ~ ^\. {
    deny all;
  }
  location ~ <%= @pcre_extension_block_list %> {
    deny all;
  }
  location ~ <%= @pcre_location_block_list %> { 
    deny all;
  }
  location ~ <%= @pcre_keyword_block_list %> {
    deny all;
  }
  # ------------------------
  ## Static Content Rules
  location ~* <%= @pcre_static_content %> {
    expires max;
    try_files $request_uri @drupal;
    break;
  }
  # for css,js files try Boost cache too
  location ~* \.(css|js)(\.gz)?$ {
    expires max;
    try_files $request_uri /cache/perm/$http_host$request_uri$boost_query.$1 @drupal;
    break;
  }
  # add_header for html and xml files
  location ~* \.(html|xml)$ {
    add_header Cache-Control no-cache,no-store,must-validate;
    try_files $request_uri @drupal;
    break;
  }
  # -------------------------
  # Fallback on Drupal for 404
  error_page 404 = @drupal;
  # Do not serve cached pages if they are not GET requests
  if ( $request_method != GET ) {
    return 404;
  }
  # Do not serve cached pages if user is logged in
  if ($http_cookie ~ "DRUPAL_UID") {
    return 404;
  }
  # Serve the boost html page if it exists or goto drupal.
  # Note: unlike js/css, we do not want to cache in browser.
  location / {
    add_header Cache-Control no-cache,no-store,must-validate;
    try_files /cache/normal/$http_host$request_uri$boost_query$query_string.html @drupal;
  }
 
  # ------------------------
  # reverse proxy headers
  proxy_set_header X-Real-IP  $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header Host $http_host;

  # Define named location @drupal, proxy to Apache
  location @drupal{
    access_log  <%= node['nginx']['log_dir'] %>/proxy.access.log drupal_proxy;
    proxy_pass http://127.0.0.1:<%= node['deploy-drupal']['apache_port']%>;
  }
}
